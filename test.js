const addon = require('./build/Release/usb_addon.node');

// 创建 USB 设备实例
const device = new addon.UsbDevice();

// 定义 VID 和 PID - 可以设置为 0, 0 来匹配第一个找到的打印机
const VID = 0x0483;  // 0 表示匹配任何 VID
const PID = 0x5750;  // 0 表示匹配任何 PID

let isMonitoringStarted = false;

// 热插拔回调函数
function hotplugCallback(eventType, devicePath) {
    console.log('热插拔事件:', eventType, devicePath);
    if (eventType === 'add') {
        console.log('设备已连接:', devicePath);
    } else if (eventType === 'remove') {
        console.log('设备已断开:', devicePath);
    }
}

// 启动热插拔监控
function startMonitoring() {
    try {
        console.log('启动热插拔监控...');
        device.startHotplugMonitor(hotplugCallback); // 确保传递了 hotplugCallback
        console.log('热插拔监控已启动，请插入或拔出 USB 打印机');
        
        // 设置一个信号处理器来捕获 Ctrl+C
        process.on('SIGINT', () => {
            cleanup();
            process.exit();
        });
        
        // 保持程序运行
        console.log('按 Ctrl+C 停止监控');
    } catch (error) {
        console.error('启动热插拔监控失败:', error);
    }
}

async function testDevice() {
    try {
        console.log('尝试连接 USB 打印机...');
        
        // 连接设备
        const connected = device.connect(VID, PID);
        console.log('连接结果:', connected);
        
        if (connected) {

            startMonitoring();
            
            // 发送测试数据 - ESC/POS 打印机指令示例
            const testData = Buffer.from("IN FSIZE10432,6370 U5800,6370 D5927,6370 U5990,6370 D6117,6370 U6181,6370 D6308,6370 U6371,6370 D6498,6370 U6562,6370 D6689,6370 U6752,6370 D6879,6370 U6943,6370 D7070,6370 U7133,6370 D7260,6370 U7324,6370 D7451,6370 U7514,6370 D7641,6370 U7705,6370 D7832,6370 U7895,6370 D8022,6370 U8086,6370 D8213,6370 U8276,6370 D8403,6370 U8467,6370 D8594,6370 U8657,6370 D8752,6370 U8752,5399 D8752,5272 U8752,5209 D8752,5082 U8752,5018 D8752,4891 U8752,4828 D8752,4701 U8752,4637 D8752,4510 U8752,4447 D8752,4320 U8752,4256 D8752,4129 U8752,4066 D8752,3939 U8752,3875 D8752,3748 U8752,3685 D8752,3558 U8752,3494 D8752,3367 U8752,3304 D8752,3177 U8752,3113 D8752,2986 U8752,2923 D8752,2796 U8752,2732 D8752,2605 U8752,2542 D8752,2415 U8752,2351 D8752,2224 U8752,2161 D8752,2034 U8752,1970 D8752,1843 U8781,1815 D8908,1815 U8971,1815 D9098,1815 U9162,1815 D9289,1815 U9352,1815 D9479,1815 U9543,1815 D9670,1815 U9733,1815 D9860,1815 U9924,1815 D10051,1815 U10114,1815 D10241,1815 U10305,1815 D10432,1815 U8717,1815 D8590,1815 U8527,1815 D8400,1815 U8336,1815 D8209,1815 U8146,1815 D8019,1815 U7955,1815 D7828,1815 U7765,1815 D7638,1815 U7574,1815 D7447,1815 U7384,1815 D7257,1815 U7193,1815 D7066,1815 U7003,1815 D6876,1815 U6812,1815 D6685,1815 U6622,1815 D6495,1815 U6431,1815 D6304,1815 U6241,1815 D6114,1815 U6050,1815 D5923,1815 U5860,1815 D5733,1815 U5669,1815 D5542,1815 U5479,1815 D5352,1815 U5288,1815 D5161,1815 U5098,1815 D4971,1815 U4907,1815 D4780,1815 U4717,1815 D4590,1815 U4526,1815 D4399,1815 U4336,1815 D4209,1815 U4145,1815 D4018,1815 U3955,1815 D3828,1815 U3764,1815 D3637,1815 U3574,1815 D3447,1815 U3383,1815 D3256,1815 U3193,1815 D3066,1815 U3002,1815 D2875,1815 U2812,1815 D2685,1815 U2621,1815 D2494,1815 U2431,1815 D2304,1815 U2240,1815 D2113,1815 U2050,1815 D1923,1815 U1859,1815 D1732,1815 U1669,1815 D1542,1815 U1478,1815 D1351,1815 U1288,1815 D1161,1815 U1161,1843 D1161,1970 U1161,2034 D1161,2161 U1161,2224 D1161,2351 U1161,2415 D1161,2542 U1161,2605 D1161,2732 U1161,2796 D1161,2923 U1161,2986 D1161,3113 U1161,3177 D1161,3304 U1161,3367 D1161,3494 U1161,3558 D1161,3685 U1161,3748 D1161,3875 U1161,3939 D1161,4066 U1161,4129 D1161,4256 U1161,4320 D1161,4447 U1161,4510 D1161,4637 U1161,4701 D1161,4828 U1161,4891 D1161,5018 U1161,5082 D1161,5209 U1161,5272 D1161,5399 D1161,5399 D1288,5399 U1351,5399 D1478,5399 U1542,5399 D1669,5399 U1732,5399 D1859,5399 U1923,5399 D2050,5399 U2113,5399 D2240,5399 U2304,5399 D2431,5399 U2494,5399 D2621,5399 U2685,5399 D2812,5399 U2875,5399 D3002,5399 U3066,5399 D3193,5399 U3256,5399 D3383,5399 U3447,5399 D3574,5399 U3637,5399 D3764,5399 U3828,5399 D3955,5399 U4018,5399 D4145,5399 U4113,5399 D4113,5272 U4113,5209 D4113,5082 U4113,5018 D4113,4891 U4113,4828 D4113,4701 U4113,4637 D4113,4510 U4113,4447 D4113,4320 U4113,4256 D4113,4129 U4113,4066 D4113,3939 U4113,3875 D4113,3748 U4113,3685 D4113,3558 U4113,3494 D4113,3367 U4113,3304 D4113,3177 U4113,3113 D4113,2986 U4113,2923 D4113,2796 U4113,2732 D4113,2605 U4113,2542 D4113,2415 U4113,2351 D4113,2224 U4113,2161 D4113,2034 U4113,1970 D4113,1843 U5800,1844 D5800,1971 U5800,2034 D5800,2161 U5800,2225 D5800,2352 U5800,2415 D5800,2542 U5800,2606 D5800,2733 U5800,2796 D5800,2923 U5800,2987 D5800,3114 U5800,3177 D5800,3304 U5800,3368 D5800,3495 U5800,3558 D5800,3685 U5800,3749 D5800,3876 U5800,3939 D5800,4066 U5800,4130 D5800,4257 U5800,4320 D5800,4447 U5800,4511 D5800,4638 U5800,4701 D5800,4828 U5800,4892 D5800,5019 U5800,5082 D5800,5209 U5800,5273 D5800,5400 U5860,5399 D5733,5399 U5669,5399 D5542,5399 U5479,5399 D5352,5399 U5288,5399 D5161,5399 U5098,5399 D4971,5399 U4907,5399 D4780,5399 U4717,5399 D4590,5399 U4526,5399 D4399,5399 U4336,5399 D4209,5399 U4113,6370 D4018,6370 U3955,6370 D3828,6370 U3764,6370 D3637,6370 U3574,6370 D3447,6370 U3383,6370 D3256,6370 U3193,6370 D3066,6370 U3002,6370 D2875,6370 U2812,6370 D2685,6370 U2621,6370 D2494,6370 U2431,6370 D2304,6370 U2240,6370 D2113,6370 U2050,6370 D1923,6370 U1859,6370 D1732,6370 U1669,6370 D1542,6370 U1478,6370 D1351,6370 U1288,6370 D1161,6370 U5923,5399 D6050,5399 U6114,5399 D6241,5399 U6304,5399 D6431,5399 U6495,5399 D6622,5399 U6685,5399 D6812,5399 U6876,5399 D7003,5399 U7066,5399 D7193,5399 U7257,5399 D7384,5399 U7447,5399 D7574,5399 U7638,5399 D7765,5399 U7828,5399 D7955,5399 U8019,5399 D8146,5399 U8209,5399 D8336,5399 U8400,5399 D8527,5399 U8590,5399 D8717,5399 U8781,5399 D8908,5399 U8971,5399 D9098,5399 U9162,5399 D9289,5399 U9352,5399 D9479,5399 U9543,5399 D9670,5399 U9733,5399 D9860,5399 U9924,5399 D10051,5399 U10114,5399 D10241,5399 U10305,5399 D10432,5399 U0,0 @;");
            
            console.log('发送数据到打印机...');
            
           // const bytesWritten = device.sendData(testData);
           // console.log(`成功发送 ${bytesWritten} 字节`);
            
            // 断开连接
            //device.disconnect();
            // console.log('设备已断开连接');
        } else {
            console.log('未找到打印机设备');
        }
    } catch (error) {
        console.error('发生错误:', error);
        if (device) {
            try {
                device.disconnect();
            } catch (e) {}
        }
    }
}

// 清理函数
async function cleanup() {
    try {
        if (device) {
            // 停止热插拔监控
            if (isMonitoringStarted) {
                try {
                    device.stopHotplugMonitor();
                    isMonitoringStarted = false;
                    console.log('热插拔监控已停止');
                } catch (e) {
                    console.warn('停止热插拔监控时发生错误:', e);
                }
            }

            // 断开连接
            try {
                device.disconnect();
                console.log('设备已断开连接');
            } catch (e) {
                console.warn('断开连接时发生错误:', e);
            }
        }
    } catch (error) {
        console.error('清理过程中发生错误:', error);
    }
}

// 处理程序退出
process.on('SIGINT', async () => {
    console.log('\n正在退出程序...');
    await cleanup();
    process.exit(0);
});

// 处理未捕获的异常
process.on('uncaughtException', async (error) => {
    console.error('未捕获的异常:', error);
    await cleanup();
    process.exit(1);
});

// 运行测试
console.log('开始USB测试...');
testDevice().catch(console.error);

// 定期发送数据的示例
function startPeriodicSend() {
    const interval = 1000; // 每秒发送一次
    const data = Buffer.from([0xAA, 0xBB, 0xCC, 0xDD]); // 示例数据

    setInterval(() => {
        if (device.isConnected) {
            console.log('发送周期数据...');
            device.sendData(data);
        }
    }, interval);
}

// 如果需要定期发送数据，取消下面这行的注释
// startPeriodicSend();

// 错误处理示例
function handleError(error) {
    console.error('发生错误:', error);
    cleanup();
}

// 使用示例：发送自定义数据
function sendCustomData(data) {
    try {
        if (!Buffer.isBuffer(data)) {
            data = Buffer.from(data);
        }
        device.sendData(data);
        console.log('自定义数据已发送');
    } catch (error) {
        handleError(error);
    }
}

// 使用示例：
// sendCustomData([0x01, 0x02, 0x03, 0x04]);
// 或
// sendCustomData(Buffer.from('Hello, USB!', 'utf8')); 